<?xml version="1.0"?>
<project name="Chaos-Authentication-Wowza-plugin" default="jar" basedir=".">
	
	<property name="wowza.install.dir" value="/usr/local/WowzaMediaServer"/><!-- Wowza location on Linux -->
	<!--property name="wowza.install.dir" value="/Library/WowzaMediaServer"/--> <!-- Wowza location on Mac -->
	<property name="wowza.lib.dir" value="${wowza.install.dir}/lib"/>
	<property name="jar.filename" value="LARM-CHAOS-Wowza-plugin.jar"/>
	<property name="test.jar.filename" value="LARM-CHAOS-Wowza-plugin.jar"/>
	<property name="package.filename" value="LARM-CHAOS-Wowza-package.zip"/>
	<property name="java.src.dir" value="src"/>
	<property name="test.src.dir" value="test"/>
	<property name="conf.src.dir" value="conf"/>
	<property name="core.lib.dir" value="lib"/>
	<property name="jersey.lib.dir" value="lib/jersey-1.3/jars"/>
	<property name="core.scripts.dir" value="scripts"/>
	<!-- Build related folders -->
	<property name="core.build.dir" value="target"/>
	<property name="classes.build.dir" value="${core.build.dir}/classes"/>
	<property name="package.build.dir" value="${core.build.dir}/package"/>

    <path id="classpath">
        <fileset dir="${wowza.lib.dir}" includes="**/*.jar"/>
        <fileset dir="${core.lib.dir}" includes="**/*.jar"/>
    </path>

    <path id="test.classpath">
        <fileset dir="${wowza.lib.dir}" includes="**/*.jar"/>
        <fileset dir="${core.lib.dir}" includes="**/*.jar"/>
        <fileset dir="${package.build.dir}/WowzaSystemDir/lib" includes="**/*.jar"/>
    </path>

	<target name="clean">
		<delete dir="${core.build.dir}"/>
	</target>
	
	<target name="compile">
		<mkdir dir="${core.build.dir}"/>
		<mkdir dir="${classes.build.dir}"/>
		<javac srcdir="${java.src.dir}" destdir="${classes.build.dir}" classpathref="classpath" includeantruntime="false"/>
	</target>
	
	<target name="compile.test" depends="compile">
		<javac srcdir="${test.src.dir}" destdir="${classes.build.dir}" classpathref="classpath"/>
	</target>
	
	<target name="jar" depends="compile">
		<mkdir dir="${core.build.dir}"/>
		<mkdir dir="${classes.build.dir}"/>
		<mkdir dir="${package.build.dir}/WowzaSystemDir/lib"/>
		<jar jarfile="${package.build.dir}/WowzaSystemDir/lib/${jar.filename}">
			<fileset dir="${classes.build.dir}"/>
		</jar>
	</target>
	
	<target name="jar.test" depends="compile.test">
		<mkdir dir="${core.build.dir}"/>
		<mkdir dir="${classes.build.dir}"/>
		<mkdir dir="${package.build.dir}/WowzaSystemDir/lib"/>
		<jar jarfile="${package.build.dir}/WowzaSystemDir/lib/${test.jar.filename}">
			<fileset dir="${classes.build.dir}"/>
		</jar>
	</target>
	
	<target name="test" depends="jar.test">
		<delete dir="${core.build.dir}/reports"/>
		<mkdir dir="${core.build.dir}/reports"/>
		<junit haltonfailure="false" printsummary="true">
			<classpath refid="test.classpath"/>
			<!--sysproperty key="dk.statsbiblioteket.digitaltv.confdir" value="${conf.env}"/-->
			<formatter type="brief" usefile="false"/>
			<formatter type="xml"/>
			<!-- Example of running a single test case:
			 <test todir="${builddir}/reports" name="dk.statsbiblioteket.digitaltv.ritzau.exporter.RitzauProgramXMLExporterXMLTransformTester"/>
			-->
			<batchtest todir="${core.build.dir}/reports">
				<fileset dir="${classes.build.dir}" includes="**/*Test.class"/>
			</batchtest>
		</junit>
		<junitreport todir="${core.build.dir}/reports">
			<fileset dir="${core.build.dir}/reports">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${core.build.dir}/reports"/>
		</junitreport>
	</target>
	
	<target name="package" depends="compile, jar">
		<mkdir dir="${core.build.dir}"/>
		<!-- Pack jar file -->
		<mkdir dir="${package.build.dir}"/>
		<mkdir dir="${package.build.dir}/WowzaSystemDir"/>
		<mkdir dir="${package.build.dir}/WowzaSystemDir/lib"/>
		<jar jarfile="${package.build.dir}/WowzaSystemDir/lib/${jar.filename}">
			<fileset dir="${classes.build.dir}"/>
		</jar>
		<!-- Pack external jar files -->
		<copy todir="${package.build.dir}/WowzaSystemDir/lib" >  
			<fileset dir="${core.lib.dir}" includes="*.jar"/>  
			<fileset dir="${jersey.lib.dir}" includes="*.jar"/>  
		</copy>
		<!-- Pack script files -->
		<mkdir dir="${package.build.dir}/WowzaSystemDir/bin"/>
		<copy todir="${package.build.dir}/WowzaSystemDir/bin" >  
			<fileset dir="${core.scripts.dir}" includes="**/*"/>  
		</copy>
		<!-- Pack configuration files -->
		<copy todir="${package.build.dir}" >
			<fileset dir="${conf.src.dir}" includes="**/*"/> <!-- Contains both WowzaSystemDir and chaosVHost -->  
		</copy>
		<!-- Zip content -->
		<zip destfile="${core.build.dir}/${package.filename}" basedir="${package.build.dir}"/>
		<!-- Place deployment scripts in target folder -->
		<copy todir="${core.build.dir}" >  
			<fileset dir="${core.scripts.dir}" includes="deploy-*.sh"/>
		</copy>
		<chmod file="${core.build.dir}/deploy-*.sh" perm="ugo+rx"/>
		
	</target>
</project>
